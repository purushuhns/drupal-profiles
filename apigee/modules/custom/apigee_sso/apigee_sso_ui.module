<?php
/**
 * Implements hook_theme().
 *
 * @return array
 */
function apigee_sso_ui_theme() {
  return array(
    'apigee_sso_ui_signin_block' => array(
      'template' => 'apigee-sso-ui-signin-block',
      'path' => drupal_get_path('module', 'apigee_sso_ui') . "/templates",
      'variables' => array(
        'github' => FALSE,
        'apigee' => FALSE,
        'twitter' => FALSE,
      ),
    )
  );
}

/**
 * Implements hook_form_alter().
 *
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function apigee_sso_ui_form_alter(array &$form, array &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_login':
      $vars = array(
        'github' => FALSE,
        'apigee' => FALSE,
        'twitter' => FALSE,
      );
      // Conditionally populate $vars with real values.
      template_preprocess_apigee_sso_ui_signin_block($vars);

      if($vars['github'] || $vars['apigee'] || $vars['twitter']) {
        $form['sso_buttons'] = array(
          '#type' => 'markup',
          '#markup' => theme('apigee_sso_ui_signin_block', $vars),
          '#weight' => -99
        );
        drupal_add_css(drupal_get_path('module', 'apigee_sso_ui') . '/apigee_sso.css',
          array('group' => CSS_THEME, 'every_page' => TRUE));
      }
      if (isset($form['twitter_signin'])) {
        unset($form['twitter_signin']);
      }
      break;
  }
}

/**
 * Implements hook_block_info().
 *
 * @param int $delta
 * @return array
 */
function apigee_sso_ui_block_info($delta = 0) {
  $blocks = array();
  $blocks[0] = array(
    'info' => t('Apigee SSO'),
    'weight' => 0,
    'status' => 0,
    'region' => 'sidebar_first'
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * @param string $delta
 * @return array
 */
function apigee_sso_ui_block_view($delta = '') {
  switch ($delta) {
    default:
      $block = array();
      $block['subject'] = t('Apigee SSO');
      $block['content'] = theme('apigee_sso_ui_signin_block');
  }
  return $block;
}

/**
 * Implements template_preprocess_HOOK() for apigee_sso_ui_signin_block().
 *
 * This is done to make sure that the github url is always available whenever
 * the apigee_sso_ui_signin_block is rendered if the github module is enabled.
 *
 * @param array $vars
 */
function template_preprocess_apigee_sso_ui_signin_block(array &$vars){
  if (module_exists('github_connect')) {
    global $base_url;
    // Copypasta from github_connect module.
    $client_id = variable_get('github_connect_client_id');
    if ($client_id) {
      $destination = user_login_destination();
      $link = 'https://github.com/login/oauth/authorize?client_id=' . $client_id . '&scope=user,public&redirect_uri=' . urlencode($base_url . '/github/register/create?destination=' . $destination['destination']);
      $vars['github'] = $link;
    }
  }

  if (module_exists('apigee_account')) {
    if (array_key_exists('HTTPS', $_SERVER) && strtolower($_SERVER['HTTPS']) == 'on') {
      $server_name = strtolower($_SERVER['HTTP_HOST']);
      if ($server_name == 'localhost' || preg_match('!\.apigee\.com$!', $server_name)) {
        $vars['apigee'] = TRUE;
      }
    }
  }
  if (module_exists('twitter_signin')) {
    $key = variable_get('twitter_consumer_key', '');
    $secret = variable_get('twitter_consumer_secret', '');
    if (!empty($key) && !empty($secret)) {
      $vars['twitter'] = TRUE;
    }
  }
}
